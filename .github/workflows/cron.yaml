name: Python Script CI

on:
  workflow_dispatch:

  schedule:
    # Cron format: min hour day(month) month day(week)
    # This runs at 4:00 AM UTC on Monday, Wednesday, and Friday.
    # This corresponds to 2:00 PM Sydney time during AEST (UTC+10).
    # NOTE: During daylight saving (AEDT, UTC+11), this will trigger at 3:00 PM Sydney time.
    - cron: '0 4 * * 1,3,5'

jobs:
  run-script:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Python script and save output
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python main.py

      - name: Upload Filtered Car Data CSV
        uses: actions/upload-artifact@v4
        with:
          name: filtered-car-data
          path: filtered_cars.html

  # send-notification:
  #   needs: run-script
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download output artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: filtered-car-data
      
  #     - name: Read HTML file content
  #       id: email-body
  #       run: |
  #         delimiter=$(openssl rand -hex 8)
  #         echo "body<<$delimiter" >> $GITHUB_OUTPUT
  #         cat filtered_cars.html >> $GITHUB_OUTPUT
  #         echo "$delimiter" >> $GITHUB_OUTPUT

  #       # Send the email with the HTML content
  #     - name: Send email notification
  #       uses: dawidd6/action-send-mail@v3
  #       with:
  #         server_address: ${{ secrets.SMTP_SERVER }}
  #         server_port: ${{ secrets.SMTP_PORT }}
  #         username: ${{ secrets.SMTP_USERNAME }}
  #         password: ${{ secrets.SMTP_PASSWORD }}
  #         subject: 'Auto Auction Deals Report (${{ needs.run-script.outputs.status }}) - ${{ job.status }}'
  #         to: ${{ secrets.EMAIL_TO }}
  #         from: GitHub Actions <actions@github.com>
  #         content_type: html # <-- Set content type to HTML
  #         body: ${{ steps.email-body.outputs.body }} # <-- Use the HTML content as the body
